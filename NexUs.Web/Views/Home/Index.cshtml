@{
    ViewData["Title"] = "Home Page"; 
}
@using NexUs.Core.Application.ViewModels.Posts
@using NexUs.Core.Application.ViewModels.Comments
@using System.Text
@using Microsoft.AspNetCore.Html

@model List<PostViewModel>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- Botón para añadir una nueva publicación alineado a la izquierda -->

            <div class="d-flex justify-content-center mb-3 px-4">
                <a asp-action = "Add" asp-controller ="Home" class="btn btn-outline-info">Añadir publicación</a>
            </div>

            @foreach (var post in Model)
            {
                <div class="card text-white p-3 mb-4 shadow-lg-0 col-lg-8">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div class="d-flex align-items-center">
                            <img src="@post.User.ImagePath" alt="Usuario" class="profile-img me-3">
                            <div>
                                <h6 class="mb-0">@post.User.FirstName @post.User.LastName</h6>
                                <small class="text-muted">@post.DateTime.ToString("g")</small>
                            </div>
                        </div>

                        <!-- Menú desplegable de opciones -->
                        <div class="dropdown">
                            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                &#8226;&#8226;&#8226;
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li>
                                    <a asp-controller="Home" asp-action="Edit" asp-route-id="@post.Id" type="button" class="dropdown-item text-dark">Editar</a>

                                </li>
                                <li>
                                    <a href="#" class="dropdown-item text-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-post-id="@post.Id">
                                        Borrar
                                    </a>
                                </li>

                            </ul>
                        </div>
                    </div>

                    <p>@post.Content</p>

                    @if (!string.IsNullOrEmpty(post.ImagePath))
                    {
                        <div class="ratio ratio-1x1 post-img">
                            <img src="@post.ImagePath" class="img-fluid rounded rounded-1" alt="Imagen del post">
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(post.VideoPath))
                    {
                        string videoId = @ExtractYouTubeVideoId(post.VideoPath);

                        <div class="ratio ratio-16x9">


                            <iframe class="mb-3" width="100%" height="100%" src="https://www.youtube.com/embed/@videoId" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                        </div>
                    }

                    <!-- Botón para mostrar/ocultar comentarios -->
                    <button class="btn btn-sm mt-3" style="background-color: #008f89; color: white;" data-bs-toggle="collapse" data-bs-target="#commentsSection_@post.Id">
                        Ver comentarios
                    </button>

                    <!-- Sección de comentarios -->
                    <div id="commentsSection_@post.Id" class="collapse mt-3">
                        <h6 class="text-light">Comentarios</h6>
                        @foreach (var comment in post.Comments)
                        {
                            @if (comment.ParentCommentId == 0)
                            {
                                @DisplayComment(comment, post.Id, 0)
                            }
                        }

                        <!-- Formulario para agregar un nuevo comentario -->
                        <form asp-controller="Comment" asp-action="AddComment" method="post" class="mt-3">
                            <input type="hidden" name="postId" value="@post.Id" />
                            <div class="form-group">
                                <textarea name="content" class="form-control" rows="3" placeholder="Escribe un comentario..." required></textarea>
                            </div>
                            <button type="submit" class="btn mt-2" style="background-color: #008f89; color: white;">Comentar</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal de confirmación de eliminación -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que deseas eliminar esta publicación? Esta acción no se puede deshacer.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deletePostForm" asp-controller="Home" asp-action="Delete" method="post">
                    <input type="hidden" id="postIdToDelete" name="id" />
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var deleteButtons = document.querySelectorAll('a[data-bs-target="#confirmDeleteModal"]');
    deleteButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            var postId = this.getAttribute('data-post-id');
            document.getElementById('postIdToDelete').value = postId;
        });
    });
</script>

@functions {
    public IHtmlContent DisplayComment(CommentViewModel comment, int postId, int level)
    {
        var htmlContent = new StringBuilder();
        int indent = level * 25;

        htmlContent.Append($@"
            <div class='comment mb-3' style='margin-left: {indent}px; padding-left: 10px; border-left: 2px solid rgba(255, 255, 255, 0.3);'>
                <div class='d-flex align-items-center'>
                    <img src='{comment.User.ImagePath}' alt='Usuario' class='profile-img me-3' style='width: 40px; height: 40px;'>
                    <div>
                        <h6 class='mb-0'>{comment.User.FirstName} {comment.User.LastName}</h6>
                        <p>{comment.Content}</p>
                    </div>
                </div>

                <button class='btn btn-sm mb-2 text-light' data-bs-toggle='collapse' data-bs-target='#responseForm_{comment.Id}'>Responder</button>

                <div id='responseForm_{comment.Id}' class='collapse mt-2'>
                    <form action='/Comment/AddComment' method='post' class='mt-3'>
                        <input type='hidden' name='postId' value='{postId}' />
                        <input type='hidden' name='parentCommentId' value='{comment.Id}' />
                        <div class='form-group'>
                            <textarea name='content' class='form-control' rows='2' placeholder='Escribe una respuesta...' required></textarea>
                        </div>
                        <button type='submit' class='btn mt-2' style='background-color: #008f89; color: white;'>Responder</button>
                    </form>
                </div>
            ");

        foreach (var answer in comment.Answers)
        {
            htmlContent.Append(DisplayComment(answer, postId, level + 1));
        }

        htmlContent.Append("</div>");

        return new HtmlString(htmlContent.ToString());


    }

    public string ExtractYouTubeVideoId(string videoUrl)
    {
        if (string.IsNullOrEmpty(videoUrl))
        {
            return string.Empty;
        }

        if (videoUrl.Contains("youtube.com") && videoUrl.Contains("v="))
        {
            var urlParts = videoUrl.Split("v=");
            if (urlParts.Length > 1)
            {
                return urlParts[1].Split('&')[0]; // Extracts only the video ID
            }
        }
        else if (videoUrl.Contains("youtu.be/"))
        {
            var urlParts = videoUrl.Split("youtu.be/");
            if (urlParts.Length > 1)
            {
                return urlParts[1].Split('?')[0]; // Extracts the video ID without extra parameters
            }
        }

        return string.Empty;
    }
}
